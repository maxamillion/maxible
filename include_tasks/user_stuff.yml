---
# Meant to be used with import_tasks
#
- name: ensure pip
  ansible.builtin.shell: "python -m ensurepip --default-pip"

- name: pip user install some stuff
  ansible.builtin.shell: "python -mpip install --user pipx"
  args:
    creates: ~/.local/bin/pipx
#
- name: pipx user install some stuff
  ansible.builtin.shell: "pipx install {{item}}"
  loop:
    - ptpython
    - tox
    - httpie
    - flake8
    - pep8
    - pyflakes
    - pylint
    - black
    - pipenv
    - poetry
    - tmuxp
    - bpytop
    - python-lsp-server
    - tldr
    - ddgr
  args:
    creates: ~/.local/bin/{{item}}

- name: pip user install virtualenvwrapper (it's special)
  ansible.builtin.shell: python -mpip install --user virtualenvwrapper
  args:
    creates: ~/.local/bin/virtualenvwrapper.sh

- name: pip user install q (it's special)
  ansible.builtin.shell: python -mpip install --user q
  args:
    creates: ~/.local/lib/python{{ansible_python["version"]["major"]}}.{{ansible_python["version"]["minor"]}}/site-packages/q.py
  tags:
    - pipq

- name: check for local poetry bash completions
  ansible.builtin.stat:
    path: ~/.local/poetry.bash-completion
  register: poetry_stat

- name: generate local poetry bash completions if they aren't present
  ansible.builtin.shell: ~/.local/bin/poetry completions bash > ~/.local/poetry.bash-completion
  when: not poetry_stat.stat.exists

- name: install minikube
  ansible.builtin.import_tasks: include_tasks/install_minikube.yml

- name: install docker -> podman override
  ansible.builtin.copy:
    src: files/docker_podman.sh
    dest: "{{ ansible_user_dir}}/bin/docker"
    mode: "755"

# vim:ft=yaml.ansible
